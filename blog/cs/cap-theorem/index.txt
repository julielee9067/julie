2:"$Sreact.suspense"
3:I[1523,["137","static/chunks/137-7c01c277e0f0cc48.js","269","static/chunks/269-a28aad18182cd41e.js","614","static/chunks/614-0bac26ad143a75db.js","797","static/chunks/app/blog/%5B...slug%5D/page-c538284416fbde4d.js"],"BailoutToCSR"]
4:I[3124,["137","static/chunks/137-7c01c277e0f0cc48.js","269","static/chunks/269-a28aad18182cd41e.js","614","static/chunks/614-0bac26ad143a75db.js","797","static/chunks/app/blog/%5B...slug%5D/page-c538284416fbde4d.js"],"default"]
6:I[4707,[],""]
8:I[6423,[],""]
9:I[3483,["648","static/chunks/648-3ae006cfe07c9d94.js","768","static/chunks/app/blog/layout-a0ac16c7cad7b2d1.js"],"default",1]
a:I[5495,["137","static/chunks/137-7c01c277e0f0cc48.js","648","static/chunks/648-3ae006cfe07c9d94.js","185","static/chunks/app/layout-2f9a78561536bd6f.js"],"ThemeProvider"]
b:I[4491,["137","static/chunks/137-7c01c277e0f0cc48.js","648","static/chunks/648-3ae006cfe07c9d94.js","185","static/chunks/app/layout-2f9a78561536bd6f.js"],"LanguageProvider"]
c:I[1890,["137","static/chunks/137-7c01c277e0f0cc48.js","648","static/chunks/648-3ae006cfe07c9d94.js","185","static/chunks/app/layout-2f9a78561536bd6f.js"],"Header"]
5:Ta1b,
CAP Theorem은 분산 시스템이 **동시에 만족시킬 수 없는** 세 가지 특성입니다.

### 1. Consistency
Consistency는 분산 시스템에 있는 **모든 노드가 같은 시점에 동일한 데이터**를 갖도록 보장하는 특성입니다.

쉽게 말하면, 한 은행 지점에서 입금을 하고, 다른 지점에 방문했을 때도 즉시 동일한 잔액을 확인할 수 있어야 하는 상황을 의미합니다.
만약 A에서 입금을 했는데 B 지점에서는 반영되지 않아 잔액이 다르다면, 이는 일관성(consistency)이 보장되지 않는 상태입니다.

### 2. Availability
Availability는 **시스템이 항상 응답을 제공할 수 있는 능력**을 뜻합니다.

만약 시스템 일부에 장애가 발생하더라도 여전히 서비스가 지속되어 요청에 대해 항상 응답을 제공해야 합니다.

예를 들어 카페에 방문했을 때, 한 손님이 커피를 주문했는데 어떤 이유로 카페에서 커피를 제공하지 못한다면 그 카페는 가용성이 낮다고 볼 수 있습니다.

다르게 말해, 어떤 이유로 커피가 늦어지더라도 나중에라도 커피를 제공하는 것처럼 반드시 응답(정상적인 응답 혹은 오류메시지라도) 받아야 한다는 점이 있습니다.

### 3. Partition Tolerence
Partition Tolerence는 **시스템 네트워크의 일부 구간이 끊기는 일이 발생하더라도 시스템이 정상적으로 작동하는 능력**을 의미합니다.

예를 들어, 한 도시의 도로에 공사가 진행되어 통행이 불가능한 상태일때도 다른 우회도로를 통해 조금 오래 걸리더라도 차량 간 이동이 가능한 상황을 생각해 보시면 됩니다.

분산 시스템에서는 복제 노드를 만들어서 사용자에게 응답할 수 있도록 처리할 수 있습니다.

### 정리
CAP Theorem은 위 세 가지 특성 중에서 두 가지만을 동시에 완벽하게 만족시킬 수 있다는 이론입니다.

보통 네트워크 장애(Partition)를 완전히 배제하는 건 불가능하기 때문에 보통 Consistency와 Availability 사이에서 하나를 희생해야만 합니다.

MongoDB는 **CP(Consistency + Partition Tolerence)** 를 따르는데, 만약 primary node에 문제가 생겼다면 secondary(복제된) 노드 중 하나가 primary로 promote 되어야 합니다.
이 때, 새로운 primary 노드가 생기는 동안 **모든 쓰기 작업은 사용 불가능한 (NOT available) 상태**가 되므로 MongoDB는 CP system이라고 볼 수 있습니다.
7:["slug","cs/cap-theorem","c"]
0:["V4za5p5BBtSVX8JZ1nOKZ",[[["",{"children":["blog",{"children":[["slug","cs/cap-theorem","c"],{"children":["__PAGE__?{\"slug\":[\"cs\",\"cap-theorem\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","cs/cap-theorem","c"],{"children":["__PAGE__",{},[["$L1",["$","$2",null,{"fallback":null,"children":["$","$L3",null,{"reason":"next/dynamic","children":["$","$L4",null,{"post":{"slug":"cs/cap-theorem","categorySlug":"cs","title":{"ko":"CAP Theorem","en":"CAP Theorem"},"date":"2025-02-25 17:14","category":{"ko":"컴퓨터 공학","en":"Computer Science"},"description":{"ko":"CAP 이론","en":"Definition of CAP Theorem"},"content":"$5"}}]}]}],null],null],null]},[null,["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$7","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[null,["$","$L9",null,{"children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}],"params":{}}]],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/julie/_next/static/css/064e10fa6619f508.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/julie/_next/static/css/e680cef9016abb97.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"ko","suppressHydrationWarning":true,"children":["$","body",null,{"className":"__className_29e2ff","children":["$","$La",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"disableTransitionOnChange":true,"children":["$","$Lb",null,{"children":[["$","$Lc",null,{}],["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]]}]}]}]}]],null],null],["$Ld",null]]]]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Julie Lee's Portfolio"}],["$","meta","3",{"name":"description","content":"Welcome to Julie's portfolio page."}],["$","meta","4",{"name":"next-size-adjust"}]]
1:null
