2:"$Sreact.suspense"
3:I[1523,["137","static/chunks/137-7c01c277e0f0cc48.js","269","static/chunks/269-a28aad18182cd41e.js","614","static/chunks/614-0bac26ad143a75db.js","797","static/chunks/app/blog/%5B...slug%5D/page-c538284416fbde4d.js"],"BailoutToCSR"]
4:I[3124,["137","static/chunks/137-7c01c277e0f0cc48.js","269","static/chunks/269-a28aad18182cd41e.js","614","static/chunks/614-0bac26ad143a75db.js","797","static/chunks/app/blog/%5B...slug%5D/page-c538284416fbde4d.js"],"default"]
6:I[4707,[],""]
8:I[6423,[],""]
9:I[3483,["648","static/chunks/648-3ae006cfe07c9d94.js","768","static/chunks/app/blog/layout-a0ac16c7cad7b2d1.js"],"default",1]
a:I[5495,["137","static/chunks/137-7c01c277e0f0cc48.js","648","static/chunks/648-3ae006cfe07c9d94.js","185","static/chunks/app/layout-2f9a78561536bd6f.js"],"ThemeProvider"]
b:I[4491,["137","static/chunks/137-7c01c277e0f0cc48.js","648","static/chunks/648-3ae006cfe07c9d94.js","185","static/chunks/app/layout-2f9a78561536bd6f.js"],"LanguageProvider"]
c:I[1890,["137","static/chunks/137-7c01c277e0f0cc48.js","648","static/chunks/648-3ae006cfe07c9d94.js","185","static/chunks/app/layout-2f9a78561536bd6f.js"],"Header"]
5:T10ed,
## 멀티플렉싱/디멀티플렉싱
전송 계층의 주요 기능 중 하나는 **한 호스트에서 여러 애플리케이션이 동시에 네트워크를 사용할 수 있도록 하는 멀티플렉싱** 기능입니다.

멀티플렉싱은 **송신 호스트**가 여러 **애플리케이션의 데이터를 수집하고, 이를 전송 계층 세그먼트로 변환**하는 과정입니다. 

반대로, 디멀티플렉싱은 **수신 호스트**가 네트워크 계층에서 전달받은 **세그먼트를 확인하고, 올바른 애플리케이션으로 데이터를 전달**하는 과정입니다.

### 멀티플렉싱이 필요한 이유
컴퓨터에서 여러 애플리케이션이 동시에 네트워크를 사용할 때, **각 애플리케이션이 올바른 데이터 패킷을 받도록 보장**하는 것이 중요합니다.

예를 들어 한 사용자가 인스타그램을 사용하면서 동시에 spotify에서 음악을 듣고 있다면 두 개의 애플리케이션이 각각 다른 서버와 데이터를 송수신해야 합니다.

하지만 네트워크 계층에서는 오직 IP 주소만 사용하기 때문에, **패킷이 어떤 애플리케이션으로 전달되어야 하는지**를 구분할 수 없습니다.

#### 멀티플렉싱 동작 원리

전송 계층에서는 각 애플리케이션을 구분하기 위해 **포트 번호**를 사용합니다.
1. 각 애플리케이션은 고유한 포트 번호를 할당받고, 이를 통해 통신을 진행합니다.
2. 애플리케이션이 네트워크를 사용할 때, 소켓을 열어서 특정 포트에서 데이터를 수신하도록 설정합니다.
3. 따라서 패킷이 도착하면 **전송 계층은 포트 번호를 확인하고 해당 포트와 연결된 애플리케이션으로 데이터를 전달**합니다.


만약 위 예제 사용자의 상황이라면 전송 계층은 **각 애플리케이션이 사용하는 포트 번호**를 기반으로 데이터를 분류해서 처리해야 합니다.
- 인스타그램 -> 포트 443 (HTTP) 사용
- spotify -> 포트 4070 사용

전송 계층은 이 정보를 기반으로 **멀티플렉싱하여 패킷을 송신**하고, **수신 측에서는 디멀티플렉싱**하여 해당 애플리케이션으로 데이터를 전달합니다.
### 멀티플렉싱 종류
멀티플렉싱 방식은 **연결을 설정하는지 여부**에 따라 두 가지로 나뉩니다.

1. **비연결형 (Connectionless) 멀티플렉싱**
    - **UDP 기반** 멀티플렉싱
    - 송신자가 수신자와 연결을 설정하지 않고 바로 데이터를 전송
    - **패킷 손실 가능성이 있지만 빠르고 간단**한 방식
    - DNS, VoIP, 온라인 게임 등에서 사용
2. **연결형 (Connection-Oriented) 멀티플렉싱**
    - **TCP 기반** 멀티플렉싱
    - 송신자와 수신자가 먼저 연결을 설정한 후 데이터를 전송 **(3-way handshake)**
    - **데이터의 신뢰성과 순서** 보장
    - 웹 브라우징, 이메일, 파일 전송 등에서 사용
    
## 전송 계층의 소켓 식별 방법
전송 계층은 소켓을 식별하기 위해 세그먼트의 특정 필드를 활용합니다. 

### UDP의 소켓 식별 방법
UDP는 `Two-Tuple`을 사용하여 소켓을 식별합니다. 

UDP 소켓은 **목적지 IP 주소**와 **목적지 포트 번호**로 구분되는데, 송신 호스트가 **어떤 출발지 포트를 사용하든 상관없이** 동일한 목적지 포트로 전송된 데이터는 같은 소켓으로 전달됩니다. 

따라서 **여러 호스트가 동일한 서버의 같은 포트**로 데이터를 보낼 수도 있습니다.

### TCP의 소켓 식별 방법
TCP는 `Four-Tuple`을 사용하여 소켓을 식별합니다.

TCP 소켓은 **출발지 IP 주소, 출발지 포트, 목적지 IP, 목적지 포트**로 구분됩니다.

즉, 같은 서버의 동일한 포트로 여러 클라이언트가 접속하더라도, **각 클라이언트의 출발지 IP 및 포트가 다르므로 개별적인 연결을 유지**할 수 있습니다.

### 웹 서버에서의 멀티플렉싱
웹 서버는 하나의 포트에서 다수의 클라이언트 요청을 처리해야 합니다. 이를 위해 웹 서버는 다수의 클라이언트의 동시 접속을 각기 다른 세션으로 구분하여 처리할 수 있습니다.

7:["slug","computer-networks/multiplexing-demultiplexing","c"]
0:["3vxnQqLROryOdwVayVeJn",[[["",{"children":["blog",{"children":[["slug","computer-networks/multiplexing-demultiplexing","c"],{"children":["__PAGE__?{\"slug\":[\"computer-networks\",\"multiplexing-demultiplexing\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","computer-networks/multiplexing-demultiplexing","c"],{"children":["__PAGE__",{},[["$L1",["$","$2",null,{"fallback":null,"children":["$","$L3",null,{"reason":"next/dynamic","children":["$","$L4",null,{"post":{"slug":"computer-networks/multiplexing-demultiplexing","categorySlug":"computer-networks","title":{"ko":"전송 계층의 멀티플렉싱과 디멀티플렉싱","en":"Transport layer's Multiplexing and Demultiplexing"},"date":"2025-02-23","category":{"ko":"컴퓨터 네트워크","en":"Computer Networks"},"description":{"ko":"전송 계층의 멀티플렉싱/디멀티플렉싱에 대해 알아봅시다","en":"How multiplexing/demultiplexing work in transport layer"},"content":"$5"}}]}]}],null],null],null]},[null,["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$7","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[null,["$","$L9",null,{"children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}],"params":{}}]],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/julie/_next/static/css/064e10fa6619f508.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/julie/_next/static/css/e680cef9016abb97.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"ko","suppressHydrationWarning":true,"children":["$","body",null,{"className":"__className_29e2ff","children":["$","$La",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"disableTransitionOnChange":true,"children":["$","$Lb",null,{"children":[["$","$Lc",null,{}],["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]]}]}]}]}]],null],null],["$Ld",null]]]]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Julie Lee's Portfolio"}],["$","meta","3",{"name":"description","content":"Welcome to Julie's portfolio page."}],["$","meta","4",{"name":"next-size-adjust"}]]
1:null
